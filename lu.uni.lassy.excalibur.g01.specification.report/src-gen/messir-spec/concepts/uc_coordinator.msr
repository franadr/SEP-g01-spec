/*
* @author Adriano
* @date Wed Nov 16 16:19:01 CET 2016
*/

package lu.uni.lassy.excalibur.g01.specification.usecases.coordinator {

import lu.uni.lassy.messir.libraries.calendar
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.excalibur.g01.specification.environment



	Use Case Model {
		use case instance uciGetPendingHelpRequests : ugRetrievePendingHelpRequestDetails() {
			actors {
				tom : actCoordinator
				
				
			}
			use case steps {
				tom executed instanceof subfunction oeGetPendingHelpRequests() {
						ieSendPendingHR("12h40","661234567") returned to tom
						ieSendPendingHR("12h43","661334569") returned to tom
						ieSendPendingHR("12h48","691007221") returned to tom
					
					}
			
			tom executed instanceof subfunction oeGetHelpRequestDetail("id : 32") {
					ieSendHelpRequestDetail("Paul Kremmer" , "6611726354", "49.618416, 6.172678" , "1 rue de Cents - Luxembourg") returned to tom
					
					}
			
			}
		}
		use case instance uciCallSelectedHelp: suCallSelectedHelpRequest{
			actors{
				tom : actCoordinator
				tango : actPhoneCompany
			}
			use case steps {
				tom executed instanceof subfunction oeReqCall("661234567"){
						ieConfirm("661234567") returned to tango
					}
				tango executed instanceof subfunction oeGetConfirm("661234567","true"){
					ieRequestConfirm("661234567","true") returned to tom
				}
			
			}
		}
		
		use case instance uciAssignPriority: ugAssignPriorityToHelpRequest{
			actors{
				tom : actCoordinator
			}
			use case steps {
				tom executed instanceof subfunction oeReqCheckbox(){
						ieSendCheckbox("Speaks slowly","Needs Water","Conscious") returned to tom
					}
				tom executed instanceof subfunction oeSendFilledCheckbox("Yes","Yes","Yes"){
					ieSendCalculatedPriority("The calculated priority is: Urgent") returned to tom
				}
				
				tom executed instanceof subfunction oeConfirmPriority("OK"){
					ieSendResult("Urgent") returned to tom
				}
			}
			
		}
		
		use case system summary suCallSelectedHelpRequest() {
			
			actor actCoordinator[primary,active]
			actor actPhoneCompany[secondary]
			
			step a : actCoordinator executes oeReqCall()
			step b : actPhoneCompany executes oeGetConfirm()
			
		}
		
		use case system subfunction oeReqCall() {
			actor actCoordinator[primary,active]
			
			returned messages{
				ieConfirm(dtPhoneNumber) returned to actCoordinator
			}
		}
		
		use case system subfunction oeGetConfirm() {
			actor actPhoneCompany[primary,active]
			
			returned messages{
				ieRequestConfirm(AdtPhoneNumber, dtBoolean) returned to actPhoneCompany
			}
		}
	use case system usergoal ugRetrievePendingHelpRequestDetails() {
		actor actCoordinator[primary,active]
		
	
		
		step a : actCoordinator executes oeGetPendingHelpRequests()
		step b : actCoordinator executes oeGetHelpRequestDetail()
		}
	 
	
	 
	 
	 use case system subfunction oeGetPendingHelpRequests() {
	 	actor actCoordinator[primary,active]
	 	
	 	
	 	returned messages{
	 		
	 		ieSendPendingHR(AdtTime) returned to actCoordinator
	 		
	 	}
	 }
	 
	 use case system subfunction oeGetHelpRequestDetail() {
	 	actor actCoordinator[primary,active]
	 	
	 	
	 	returned messages {
	 		
	 		ieSendHelpRequestDetail() returned to actCoordinator
	 	}
	 }
	 
	 use case system usergoal ugAssignPriorityToHelpRequest(){
		actor actCoordinator [primary,active]
		
		
		step a : actCoordinator executes oeReqCheckbox()
		step b : actCoordinator executes oeSendFilledCheckbox()
		step c : actCoordinator executes oeConfirmPriority()
	}
	 
	 use case system subfunction oeReqCheckbox(){
	 	actor actCoordinator[primary,active]
	 	
	 	
	 	returned messages{
	 		ieSendCheckbox(AdtCheckbox) returned to actCoordinator
	 	}
	 	
	 }
	 
	 use case system subfunction oeSendFilledCheckbox(){
	 	actor actCoordinator[primary,active]
	 	
	 	
	 	returned messages{
	 		ieSendCalculatedPriority(dtString) returned to actCoordinator
	 	}
	 	
	 }
	 
	 use case system subfunction oeConfirmPriority(){
	 	actor actCoordinator[primary,active]
	 	
	 	
	 	returned messages{
	 		ieSendResult(dtString) returned to actCoordinator
	 	}
	
	}
	
	}

}



